import{S as ia,i as Ca,s as ua,H as Be,y as Aa,z as ya,A as Da,O as fa,T as ta,g as da,d as ma,B as va,R as pa,k as o,q as p,a as i,_ as ka,l as t,m as r,r as c,h as e,c as C,$ as Ea,n as d,b as n,C as a,D as _a}from"./index.rDtGiAC-.js";import{M as qa}from"./mdsvex.OWYYiW4z.js";function ba(H){let u,m,v,y,A,f,z,zs,cs,w,Is,Rs,is,x,Us,js,Cs,I,Ns,us,k,Xs,K,$s,Ms,Q,Vs,As,R,Gs,ys,P,Ks,Ds,U,D,J,Qs,Js,W,Ws,Ys,Y,Zs,gs,se,ee,fs,_,ae,B,le,ne,ds,j,oe,ms,N,te,vs,q,Z,pe,re,X,ce,g,ss,ie,ks,$,es,Ce,Es,b,ue,L,Ae,ye,_s,M,De,qs,S,fe,bs,as,ca=`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #5DE4C7">version</span><span style="color: #A6ACCD">: </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">3</span><span style="color: #A6ACCD">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #5DE4C7">services</span><span style="color: #A6ACCD">:</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #767C9DB0; font-style: italic"># Nom du conteneur</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #5DE4C7">traefik</span><span style="color: #A6ACCD">:</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #767C9DB0; font-style: italic"># Active le redémarrage automatique du conteneur</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #5DE4C7">restart</span><span style="color: #A6ACCD">: </span><span style="color: #ADD7FF">always</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #767C9DB0; font-style: italic"># Image docker officiel du Docker Hub</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #5DE4C7">image</span><span style="color: #A6ACCD">: </span><span style="color: #ADD7FF">traefik:v2.11</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #5DE4C7">command</span><span style="color: #A6ACCD">:</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #767C9DB0; font-style: italic"># Active le Dashboard de Treafik</span></span>
<span class="line"><span style="color: #A6ACCD">      - </span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">--api.insecure=true</span><span style="color: #A6ACCD">&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #767C9DB0; font-style: italic"># Active Docker comme provider</span></span>
<span class="line"><span style="color: #A6ACCD">      - </span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">--providers.docker=true</span><span style="color: #A6ACCD">&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #767C9DB0; font-style: italic"># Désactive l&#39;exposition par défault des services web du network Docker</span></span>
<span class="line"><span style="color: #A6ACCD">      - </span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">--providers.docker.exposedbydefault=false</span><span style="color: #A6ACCD">&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #767C9DB0; font-style: italic"># Définit le port HTTP</span></span>
<span class="line"><span style="color: #A6ACCD">      - </span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">--entrypoints.web.address=:80</span><span style="color: #A6ACCD">&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #767C9DB0; font-style: italic"># Définit le port HTTPS</span></span>
<span class="line"><span style="color: #A6ACCD">      - </span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">--entrypoints.websecure.address=:443</span><span style="color: #A6ACCD">&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #767C9DB0; font-style: italic"># Active la gestion par Traefik des certificats HTTPS</span></span>
<span class="line"><span style="color: #A6ACCD">      - </span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">--certificatesresolvers.myresolver.acme.tlschallenge=true</span><span style="color: #A6ACCD">&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #767C9DB0; font-style: italic"># Adresse mail du responsable des services web</span></span>
<span class="line"><span style="color: #A6ACCD">      - </span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">--certificatesresolvers.myresolver.acme.email=exemple@gmail.com</span><span style="color: #A6ACCD">&quot;</span><span style="color: #A6ACCD"> </span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #767C9DB0; font-style: italic"># Indique le fichier dans lequel les certificats doivent être sauvegardé</span></span>
<span class="line"><span style="color: #A6ACCD">      - </span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json</span><span style="color: #A6ACCD">&quot;</span><span style="color: #A6ACCD"> </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #5DE4C7">networks</span><span style="color: #A6ACCD">:</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #767C9DB0; font-style: italic"># Le network auquel notre service doit etre attaché</span></span>
<span class="line"><span style="color: #A6ACCD">      - </span><span style="color: #ADD7FF">traefik</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #5DE4C7">ports</span><span style="color: #A6ACCD">:</span></span>
<span class="line"><span style="color: #A6ACCD">      - </span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">80:80</span><span style="color: #A6ACCD">&quot;</span><span style="color: #A6ACCD">     </span><span style="color: #767C9DB0; font-style: italic"># Port HTTP</span></span>
<span class="line"><span style="color: #A6ACCD">      - </span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">8080:8080</span><span style="color: #A6ACCD">&quot;</span><span style="color: #A6ACCD"> </span><span style="color: #767C9DB0; font-style: italic"># Port pour le Dashboard</span></span>
<span class="line"><span style="color: #A6ACCD">      - </span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">443:443</span><span style="color: #A6ACCD">&quot;</span><span style="color: #A6ACCD">   </span><span style="color: #767C9DB0; font-style: italic"># Port HTTPS</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #5DE4C7">volumes</span><span style="color: #A6ACCD">:</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #767C9DB0; font-style: italic"># Bind le socket docker</span></span>
<span class="line"><span style="color: #A6ACCD">      - </span><span style="color: #5DE4C7">type</span><span style="color: #A6ACCD">: </span><span style="color: #ADD7FF">bind</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #5DE4C7">source</span><span style="color: #A6ACCD">: </span><span style="color: #ADD7FF">/var/run/docker.sock</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #5DE4C7">target</span><span style="color: #A6ACCD">: </span><span style="color: #ADD7FF">/var/run/docker.sock</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #767C9DB0; font-style: italic"># Bind le volume contenant les certificats</span></span>
<span class="line"><span style="color: #A6ACCD">      - </span><span style="color: #5DE4C7">type</span><span style="color: #A6ACCD">: </span><span style="color: #ADD7FF">bind</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #5DE4C7">source</span><span style="color: #A6ACCD">: </span><span style="color: #ADD7FF">./letsencrypt</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #5DE4C7">target</span><span style="color: #A6ACCD">: </span><span style="color: #ADD7FF">/letsencrypt</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #5DE4C7">deploy</span><span style="color: #A6ACCD">:</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #5DE4C7">resources</span><span style="color: #A6ACCD">:</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #5DE4C7">limits</span><span style="color: #A6ACCD">:</span></span>
<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #767C9DB0; font-style: italic"># Limite mémoire, dans mon cas traefik utilise 40 Mo pour 3 services web</span></span>
<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #5DE4C7">memory</span><span style="color: #A6ACCD">: </span><span style="color: #ADD7FF">350M</span><span style="color: #A6ACCD"> </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #5DE4C7">labels</span><span style="color: #A6ACCD">:</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #767C9DB0; font-style: italic"># Activation de Traefik</span></span>
<span class="line"><span style="color: #A6ACCD">      - </span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">traefik.enable=true</span><span style="color: #A6ACCD">&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #767C9DB0; font-style: italic"># Adresse web du Dashboard</span></span>
<span class="line"><span style="color: #A6ACCD">      - </span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">traefik.http.routers.traefik.rule=Host(&#96;traefik.exemple.fr&#96;)</span><span style="color: #A6ACCD">&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #767C9DB0; font-style: italic"># Activation de l&#39;HTTPS sur la page</span></span>
<span class="line"><span style="color: #A6ACCD">      - </span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">traefik.http.routers.traefik.entrypoints=websecure</span><span style="color: #A6ACCD">&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #767C9DB0; font-style: italic"># Indication de la source du Dashboard</span></span>
<span class="line"><span style="color: #A6ACCD">      - </span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">traefik.http.routers.traefik.service=api@internal</span><span style="color: #A6ACCD">&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #767C9DB0; font-style: italic"># Nom du certificat responsable du HTTPS</span></span>
<span class="line"><span style="color: #A6ACCD">      - </span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">traefik.http.routers.traefik.tls.certresolver=myresolver</span><span style="color: #A6ACCD">&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #767C9DB0; font-style: italic"># Activation d&#39;un middleware pour protéger le Dashboard par un mot de passe</span></span>
<span class="line"><span style="color: #A6ACCD">      - </span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">traefik.http.routers.traefik.middlewares=traefik-auth</span><span style="color: #A6ACCD">&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #767C9DB0; font-style: italic"># Définition d&#39;un login et mot de passe</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #767C9DB0; font-style: italic"># Utiliser la commande suivante va générer une chaine de caractère pour remplacer les XXXXX</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #767C9DB0; font-style: italic">#    htpasswd -nb admin password </span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #767C9DB0; font-style: italic"># (Va generé le hash pour le login &quot;admin&quot; avec le mot de passe &quot;password&quot;)</span></span>
<span class="line"><span style="color: #A6ACCD">      - </span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">traefik.http.middlewares.traefik-auth.basicauth.users=XXXXX</span><span style="color: #A6ACCD">&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #767C9DB0; font-style: italic"># Paramétrage du header du middleware (Replacer le domaine par le vôtre)</span></span>
<span class="line"><span style="color: #A6ACCD">      - </span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">traefik.http.middlewares.testheader.headers.accesscontrolallowmethods=GET,OPTIONS,PUT</span><span style="color: #A6ACCD">&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">      - </span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">traefik.http.middlewares.testheader.headers.accesscontrolallowheaders=*</span><span style="color: #A6ACCD">&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">      - </span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">traefik.http.middlewares.testheader.headers.accesscontrolalloworiginlist=https://exemple.fr</span><span style="color: #A6ACCD">&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">      - </span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">traefik.http.middlewares.testheader.headers.accesscontrolmaxage=100</span><span style="color: #A6ACCD">&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">      - </span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">traefik.http.middlewares.testheader.headers.addvaryheader=true</span><span style="color: #A6ACCD">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #5DE4C7">networks</span><span style="color: #A6ACCD">:</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #767C9DB0; font-style: italic"># Appel du network Docker</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #5DE4C7">traefik</span><span style="color: #A6ACCD">:</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #5DE4C7">external</span><span style="color: #A6ACCD">: </span><span style="color: #5DE4C7">true</span></span></code></pre>`,ls,F,de,hs,V,me,Ts,h,ns,ve,ke,os,Ee,ws,O,_e,xs,G,qe,Ps,T,ts,be,he,ps,Te;return{c(){u=o("h2"),m=p("Présentation de Traefik"),v=i(),y=o("p"),A=o("a"),f=p("Traefik"),z=p(` est un service open source et gratuit permettant la mise en place d’un proxy
donnant la possibilité, entre autre, de deployer des services web sur des sous domaine.`),zs=o("br"),cs=i(),w=o("p"),Is=p("Petit exemple pratique, vous avez un nom de domaine, vous souhaitez publier 2 applications web. "),Rs=o("br"),is=i(),x=o("p"),Us=p(`Vous ne pouvez pas utiliser des ports différents pour chacun, car vous souhaitez que les deux soient disponible en https (port 443).
Et vous ne souhaitez pas non plus, configurer un serveur Nginx unique pour rediriger sur le bon service selon une url précise. `),js=o("br"),Cs=i(),I=o("p"),Ns=p(`Traefik peut donc être une solution pour vous. Pour faire simple, vous pourrez avoir vos deux services sous forme de sous-domaine,
conservé le https, et ne pas avoir 1 serveur Nginx/Appache pour gérer le trafic.`),us=i(),k=o("p"),Xs=p("Par exemple : "),K=o("code"),$s=p("service1.exemple.fr"),Ms=p(" et "),Q=o("code"),Vs=p("service2.exemple.fr"),As=i(),R=o("p"),Gs=p("Super ! Voyons ensemble comment mettre cela en place."),ys=i(),P=o("h2"),Ks=p("Mise en place de Traefik"),Ds=i(),U=o("blockquote"),D=o("p"),J=o("strong"),Qs=p("DISCLAIMER :"),Js=p(`
L’ensemble des manipulations suivantes ont été réalisé sur `),W=o("strong"),Ws=p("Ubuntu Server 22.04 LTS"),Ys=p(" avec "),Y=o("strong"),Zs=p("Traefik v2.11"),gs=p("."),se=o("br"),ee=p(`
Si vous n’utilisez pas cette distribution Unix ou que vous utilisez un autre système d’exploitation certaines choses peuvent
être différentes et je ne peux pas garantir que cela fonctionnera sur votre machine / serveur.`),fs=i(),_=o("p"),ae=p("Pour la mise en place de Traefik, nous allons utiliser "),B=o("a"),le=p("Docker"),ne=p(". Il est donc nécessaire de l’avoir installé."),ds=i(),j=o("p"),oe=p(`Pour déployer le service rapidement et configurer le conteneur Docker de manière clair, nous allons utiliser un docker compose.
La structure de directories sera comme suivant :`),ms=i(),N=o("p"),te=p("traefik :"),vs=i(),q=o("ul"),Z=o("li"),pe=p("dockercompose.yml"),re=i(),X=o("li"),ce=p("letsencrypt :"),g=o("ol"),ss=o("li"),ie=p("acme.json"),ks=i(),$=o("blockquote"),es=o("p"),Ce=p("Le dir letsencrypt et son contenu seront généré automatiquement."),Es=i(),b=o("p"),ue=p("La documentation officielle peut être retrouvée "),L=o("a"),Ae=p("ici"),ye=p("."),_s=i(),M=o("p"),De=p("Commençons donc !"),qs=i(),S=o("h2"),fe=p("Le fichier Docker Compose"),bs=i(),as=new ka(!1),ls=i(),F=o("h2"),de=p("Comment déployer"),hs=i(),V=o("p"),me=p("TODO :"),Ts=i(),h=o("ul"),ns=o("li"),ve=p("Définition du network docker"),ke=i(),os=o("li"),Ee=p("Docker compose up -d"),ws=i(),O=o("h2"),_e=p("Comment définir un service web pour un sous domaine"),xs=i(),G=o("p"),qe=p("TDOD :"),Ps=i(),T=o("ul"),ts=o("li"),be=p("Labels à ajouter au docker compose"),he=i(),ps=o("li"),Te=p("Container à ajouter au network docker"),this.h()},l(s){u=t(s,"H2",{id:!0});var l=r(u);m=c(l,"Présentation de Traefik"),l.forEach(e),v=C(s),y=t(s,"P",{});var Bs=r(y);A=t(Bs,"A",{href:!0,rel:!0});var Le=r(A);f=c(Le,"Traefik"),Le.forEach(e),z=c(Bs,` est un service open source et gratuit permettant la mise en place d’un proxy
donnant la possibilité, entre autre, de deployer des services web sur des sous domaine.`),zs=t(Bs,"BR",{}),Bs.forEach(e),cs=C(s),w=t(s,"P",{});var we=r(w);Is=c(we,"Petit exemple pratique, vous avez un nom de domaine, vous souhaitez publier 2 applications web. "),Rs=t(we,"BR",{}),we.forEach(e),is=C(s),x=t(s,"P",{});var xe=r(x);Us=c(xe,`Vous ne pouvez pas utiliser des ports différents pour chacun, car vous souhaitez que les deux soient disponible en https (port 443).
Et vous ne souhaitez pas non plus, configurer un serveur Nginx unique pour rediriger sur le bon service selon une url précise. `),js=t(xe,"BR",{}),xe.forEach(e),Cs=C(s),I=t(s,"P",{});var Se=r(I);Ns=c(Se,`Traefik peut donc être une solution pour vous. Pour faire simple, vous pourrez avoir vos deux services sous forme de sous-domaine,
conservé le https, et ne pas avoir 1 serveur Nginx/Appache pour gérer le trafic.`),Se.forEach(e),us=C(s),k=t(s,"P",{});var rs=r(k);Xs=c(rs,"Par exemple : "),K=t(rs,"CODE",{});var Fe=r(K);$s=c(Fe,"service1.exemple.fr"),Fe.forEach(e),Ms=c(rs," et "),Q=t(rs,"CODE",{});var Oe=r(Q);Vs=c(Oe,"service2.exemple.fr"),Oe.forEach(e),rs.forEach(e),As=C(s),R=t(s,"P",{});var He=r(R);Gs=c(He,"Super ! Voyons ensemble comment mettre cela en place."),He.forEach(e),ys=C(s),P=t(s,"H2",{id:!0});var ze=r(P);Ks=c(ze,"Mise en place de Traefik"),ze.forEach(e),Ds=C(s),U=t(s,"BLOCKQUOTE",{});var Ie=r(U);D=t(Ie,"P",{});var E=r(D);J=t(E,"STRONG",{});var Re=r(J);Qs=c(Re,"DISCLAIMER :"),Re.forEach(e),Js=c(E,`
L’ensemble des manipulations suivantes ont été réalisé sur `),W=t(E,"STRONG",{});var Ue=r(W);Ws=c(Ue,"Ubuntu Server 22.04 LTS"),Ue.forEach(e),Ys=c(E," avec "),Y=t(E,"STRONG",{});var je=r(Y);Zs=c(je,"Traefik v2.11"),je.forEach(e),gs=c(E,"."),se=t(E,"BR",{}),ee=c(E,`
Si vous n’utilisez pas cette distribution Unix ou que vous utilisez un autre système d’exploitation certaines choses peuvent
être différentes et je ne peux pas garantir que cela fonctionnera sur votre machine / serveur.`),E.forEach(e),Ie.forEach(e),fs=C(s),_=t(s,"P",{});var Ls=r(_);ae=c(Ls,"Pour la mise en place de Traefik, nous allons utiliser "),B=t(Ls,"A",{href:!0,rel:!0});var Ne=r(B);le=c(Ne,"Docker"),Ne.forEach(e),ne=c(Ls,". Il est donc nécessaire de l’avoir installé."),Ls.forEach(e),ds=C(s),j=t(s,"P",{});var Xe=r(j);oe=c(Xe,`Pour déployer le service rapidement et configurer le conteneur Docker de manière clair, nous allons utiliser un docker compose.
La structure de directories sera comme suivant :`),Xe.forEach(e),ms=C(s),N=t(s,"P",{});var $e=r(N);te=c($e,"traefik :"),$e.forEach(e),vs=C(s),q=t(s,"UL",{});var Ss=r(q);Z=t(Ss,"LI",{});var Me=r(Z);pe=c(Me,"dockercompose.yml"),Me.forEach(e),re=C(Ss),X=t(Ss,"LI",{});var Pe=r(X);ce=c(Pe,"letsencrypt :"),g=t(Pe,"OL",{});var Ve=r(g);ss=t(Ve,"LI",{});var Ge=r(ss);ie=c(Ge,"acme.json"),Ge.forEach(e),Ve.forEach(e),Pe.forEach(e),Ss.forEach(e),ks=C(s),$=t(s,"BLOCKQUOTE",{});var Ke=r($);es=t(Ke,"P",{});var Qe=r(es);Ce=c(Qe,"Le dir letsencrypt et son contenu seront généré automatiquement."),Qe.forEach(e),Ke.forEach(e),Es=C(s),b=t(s,"P",{});var Fs=r(b);ue=c(Fs,"La documentation officielle peut être retrouvée "),L=t(Fs,"A",{href:!0,rel:!0});var Je=r(L);Ae=c(Je,"ici"),Je.forEach(e),ye=c(Fs,"."),Fs.forEach(e),_s=C(s),M=t(s,"P",{});var We=r(M);De=c(We,"Commençons donc !"),We.forEach(e),qs=C(s),S=t(s,"H2",{id:!0});var Ye=r(S);fe=c(Ye,"Le fichier Docker Compose"),Ye.forEach(e),bs=C(s),as=Ea(s,!1),ls=C(s),F=t(s,"H2",{id:!0});var Ze=r(F);de=c(Ze,"Comment déployer"),Ze.forEach(e),hs=C(s),V=t(s,"P",{});var ge=r(V);me=c(ge,"TODO :"),ge.forEach(e),Ts=C(s),h=t(s,"UL",{});var Os=r(h);ns=t(Os,"LI",{});var sa=r(ns);ve=c(sa,"Définition du network docker"),sa.forEach(e),ke=C(Os),os=t(Os,"LI",{});var ea=r(os);Ee=c(ea,"Docker compose up -d"),ea.forEach(e),Os.forEach(e),ws=C(s),O=t(s,"H2",{id:!0});var aa=r(O);_e=c(aa,"Comment définir un service web pour un sous domaine"),aa.forEach(e),xs=C(s),G=t(s,"P",{});var la=r(G);qe=c(la,"TDOD :"),la.forEach(e),Ps=C(s),T=t(s,"UL",{});var Hs=r(T);ts=t(Hs,"LI",{});var na=r(ts);be=c(na,"Labels à ajouter au docker compose"),na.forEach(e),he=C(Hs),ps=t(Hs,"LI",{});var oa=r(ps);Te=c(oa,"Container à ajouter au network docker"),oa.forEach(e),Hs.forEach(e),this.h()},h(){d(u,"id","présentation-de-traefik"),d(A,"href","https://doc.traefik.io/traefik/"),d(A,"rel","nofollow"),d(P,"id","mise-en-place-de-traefik"),d(B,"href","https://www.docker.com"),d(B,"rel","nofollow"),d(L,"href","https://doc.traefik.io/traefik/providers/docker/"),d(L,"rel","nofollow"),d(S,"id","le-fichier-docker-compose"),as.a=ls,d(F,"id","comment-déployer"),d(O,"id","comment-définir-un-service-web-pour-un-sous-domaine")},m(s,l){n(s,u,l),a(u,m),n(s,v,l),n(s,y,l),a(y,A),a(A,f),a(y,z),a(y,zs),n(s,cs,l),n(s,w,l),a(w,Is),a(w,Rs),n(s,is,l),n(s,x,l),a(x,Us),a(x,js),n(s,Cs,l),n(s,I,l),a(I,Ns),n(s,us,l),n(s,k,l),a(k,Xs),a(k,K),a(K,$s),a(k,Ms),a(k,Q),a(Q,Vs),n(s,As,l),n(s,R,l),a(R,Gs),n(s,ys,l),n(s,P,l),a(P,Ks),n(s,Ds,l),n(s,U,l),a(U,D),a(D,J),a(J,Qs),a(D,Js),a(D,W),a(W,Ws),a(D,Ys),a(D,Y),a(Y,Zs),a(D,gs),a(D,se),a(D,ee),n(s,fs,l),n(s,_,l),a(_,ae),a(_,B),a(B,le),a(_,ne),n(s,ds,l),n(s,j,l),a(j,oe),n(s,ms,l),n(s,N,l),a(N,te),n(s,vs,l),n(s,q,l),a(q,Z),a(Z,pe),a(q,re),a(q,X),a(X,ce),a(X,g),a(g,ss),a(ss,ie),n(s,ks,l),n(s,$,l),a($,es),a(es,Ce),n(s,Es,l),n(s,b,l),a(b,ue),a(b,L),a(L,Ae),a(b,ye),n(s,_s,l),n(s,M,l),a(M,De),n(s,qs,l),n(s,S,l),a(S,fe),n(s,bs,l),as.m(ca,s,l),n(s,ls,l),n(s,F,l),a(F,de),n(s,hs,l),n(s,V,l),a(V,me),n(s,Ts,l),n(s,h,l),a(h,ns),a(ns,ve),a(h,ke),a(h,os),a(os,Ee),n(s,ws,l),n(s,O,l),a(O,_e),n(s,xs,l),n(s,G,l),a(G,qe),n(s,Ps,l),n(s,T,l),a(T,ts),a(ts,be),a(T,he),a(T,ps),a(ps,Te)},p:_a,d(s){s&&e(u),s&&e(v),s&&e(y),s&&e(cs),s&&e(w),s&&e(is),s&&e(x),s&&e(Cs),s&&e(I),s&&e(us),s&&e(k),s&&e(As),s&&e(R),s&&e(ys),s&&e(P),s&&e(Ds),s&&e(U),s&&e(fs),s&&e(_),s&&e(ds),s&&e(j),s&&e(ms),s&&e(N),s&&e(vs),s&&e(q),s&&e(ks),s&&e($),s&&e(Es),s&&e(b),s&&e(_s),s&&e(M),s&&e(qs),s&&e(S),s&&e(bs),s&&as.d(),s&&e(ls),s&&e(F),s&&e(hs),s&&e(V),s&&e(Ts),s&&e(h),s&&e(ws),s&&e(O),s&&e(xs),s&&e(G),s&&e(Ps),s&&e(T)}}}function ha(H){let u,m;const v=[H[0],ra];let y={$$slots:{default:[ba]},$$scope:{ctx:H}};for(let A=0;A<v.length;A+=1)y=Be(y,v[A]);return u=new qa({props:y}),{c(){Aa(u.$$.fragment)},l(A){ya(u.$$.fragment,A)},m(A,f){Da(u,A,f),m=!0},p(A,[f]){const z=f&1?fa(v,[f&1&&ta(A[0]),f&0&&ta(ra)]):{};f&2&&(z.$$scope={dirty:f,ctx:A}),u.$set(z)},i(A){m||(da(u.$$.fragment,A),m=!0)},o(A){ma(u.$$.fragment,A),m=!1},d(A){va(u,A)}}}const ra={title:"Deploiement Traefik avec Docker.",description:"Une explication de comment déployer des Traefik, sous Docker, pour mettre en ligne des services en HTTPS.",date:"2024-2-6",categories:["Docker","Réseau","Tuto"],published:!0};function Ta(H,u,m){return H.$$set=v=>{m(0,u=Be(Be({},u),pa(v)))},u=pa(u),[u]}class Pa extends ia{constructor(u){super(),Ca(this,u,Ta,ha,ua,{})}}export{Pa as default,ra as metadata};
